{"version":3,"sources":["db/testcase.js","utils/date.js","db/database.js","db/context.jsx","db/withDb.jsx","db/DbProvider.jsx","db/props.js","components/Appbar/index.jsx","components/ColorAvatar/index.jsx","actions/index.js","constants/index.js","components/TopicListItem/Warning.jsx","components/TopicListItem/index.jsx","components/TopicList/index.jsx","components/AddButton/index.jsx","components/TopicDrawer/index.jsx","components/index.jsx","utils/retention.js","components/Graph/DefaultGraph.jsx","components/Graph/MultiTopicGraph.jsx","components/Graph/TopicGraph.jsx","components/ReviewDrawer/LastReviewedGrid.jsx","components/ReviewDrawer/RetentionGrid.jsx","components/CloseButton/index.jsx","components/ReviewDrawer/DrawerToolbar.jsx","components/DifficultyButtons/index.jsx","components/ReviewDrawer/ReviewForm.jsx","components/ReviewDrawer/index.jsx","utils/graph.js","containers/SingleTopic/index.jsx","components/OverviewDrawer/DrawerToolbar.jsx","components/OverviewDrawer/index.jsx","containers/AllTopics/index.jsx","components/AddTopic/formProps.js","components/AddTopic/Form.jsx","components/AddTopic/FormikForm.jsx","components/AddTopic/index.jsx","containers/HomePage/index.jsx","containers/ErrorPage/index.jsx","routes.jsx","reducers/index.js","store/index.js","App.jsx","serviceWorker.js","index.jsx"],"names":["now","moment","lastReviewed","range","random","map","_","day","reviewDate","subtract","valueOf","difficulty","fromJS","topics","id","name","description","Date","color","randomColor","luminosity","findRecentReviewInDays","diff","findRecentReview","reviews","asMoment","arguments","length","undefined","sortBy","topic","get","last","adapter","LocalStorage","defaultData","Database","Object","classCallCheck","this","db","low","defaults","write","newState","setState","toJS","_this","Promise","resolve","reject","shortid","generate","push","found","getTopic","Error","_this2","find","value","isSame","assign","concat","toConsumableArray","_this3","DbContext","createContext","withDb","Component","props","react_default","a","createElement","context","Consumer","DbProvider","_ref","children","Provider","PropTypes","shape","string","arrayOf","number","isRequired","useStyles","makeStyles","root","flexGrow","Appbar","classes","className","AppBar","position","Toolbar","Typography","variant","avatar","background","ColorAvatar","Avatar","deleteTopic","createAction","addTopic","updateTopic","withRouter","open","handleClose","retention","history","dispatch","useDispatch","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","replace","autoFocus","TopicListItem","_React$useState","React","useState","_React$useState2","slicedToArray","setOpen","lastReviewFromNow","fromNow","Link","forwardRef","itemProps","ref","react_router_dom","to","handleWarning","state","PrimaryText","Fragment","toFixed","ListItem","button","component","alignItems","ListItemAvatar","components_ColorAvatar","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","aria-label","Delete_default","Divider","TopicListItem_Warning","TopicList","List","components_TopicListItem","key","theme","fab","bottom","spacing","right","extendedIcon","marginRight","AddButton","RouterLink","Fab","Add_default","drawer","width","flexShrink","drawerPaper","toolbar","mixins","toolbarTitle","marginTop","marginLeft","TopicDrawer","Drawer","paper","anchor","noWrap","isEmpty","components_TopicList","components_AddButton","styled","Grid","_templateObject","FullPageGrid","_templateObject2","calculateRetention","lastReview","calculatedDifficulty","Math","abs","exp","parseFloat","updateRetentionForATopic","recentReviewInDays","set","colors","count","fontColor","DefaultGraph","data","Array","keys","Very easy","Easy","Medium","Hard","Very hard","filter","v","es6","height","stroke","dataKey","labelFormatter","type","MultiTopicGraph","graphData","margin","top","left","allowDuplicatedCategory","offset","domain","angle","formatter","includes","x","unit","strokeDasharray","TopicGraph","grid","padding","LastReviewedGrid","container","direction","item","format","RetentionGrid","CloseButton","AdapterLink","size","CloseOutlined_default","fontSize","paddingRight","DrawerToolbar","justify","components_CloseButton","align","error","DifficultyButtons","setFieldValue","helperText","handleBlur","label","buttons","i","ToggleButton","xs","ToggleButtonGroup","exclusive","onChange","event","newValue","onBlur","form","submitButton","difficultyButtons","schema","object","min","max","required","compose","initialValues","react","formik_esm","enableReinitialize","validationSchema","onSubmit","_ref2","asyncToGenerator","regenerator_default","mark","_callee","values","wrap","_context","prev","next","pathname","message","stop","_x","apply","_ref3","handleSubmit","errors","touched","noValidate","components_DifficultyButtons","overflowX","ReviewDrawer","ReviewDrawer_DrawerToolbar","ReviewDrawer_RetentionGrid","ReviewDrawer_LastReviewedGrid","ReviewDrawer_ReviewForm","getGraphDataForATopic","_Map3","review","firstReview","first","firstDay","firstDifficulty","reduce","previousReviews","differenceFromFirstReviewDay","Map","today","sinceFirstReview","Range","fromLastReview","since","currentGraphData","has","defineProperty","add","toList","dataOfToday","pop","projectedGraphData","index","projectedDay","match","params","obj","Graph_TopicGraph","components_ReviewDrawer","OverviewDrawer","OverviewDrawer_DrawerToolbar","AllTopics","Graph_DefaultGraph","Graph_MultiTopicGraph","components_OverviewDrawer","bool","Form","handleChange","TextField","multiline","rows","FormikForm","payload","objectSpread","AddTopic_Form","defaultProps","AddTopic","AddTopic_FormikForm","HomePage","fetchedTopics","useSelector","shallowEqual","updateRetentionForTopics","acc","merge","getGraphDataForAllTopics","components_Appbar","react_router","path","render","containers_SingleTopic","containers_AllTopics","components_TopicDrawer","location","Routes","exact","ErrorPage","fromLocalDb","getTopics","defaultState","handleActions","_handleActions","action","newTopic","updateIn","arr","filteredTopics","updatedReviewDates","findIndex","update","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","db_DbProvider","CssBaseline","routes","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca81501a.chunk.js","sourcesContent":["import moment from 'moment';\nimport random from 'lodash/random';\nimport range from 'lodash/range';\nimport { fromJS } from 'immutable';\n\nimport randomColor from 'randomcolor';\n\nconst now = moment();\n\nconst lastReviewed = range(random(1, 6, false))\n  .map(_ => random(1, 6, false))\n  .map(day => ({\n    reviewDate: now.subtract(day, 'days').valueOf(),\n    difficulty: random(1, 5),\n  }));\n\nexport const debugState = fromJS({\n  topics: [\n    {\n      id: 'oaJwnzK1s',\n      name: 'Storybook',\n      description: 'storybook basix',\n      lastReviewed: [\n        {\n          reviewDate: new Date(2019, 5, 29).valueOf(),\n          difficulty: 1,\n        },\n        {\n          reviewDate: new Date(2019, 6, 2).valueOf(),\n          difficulty: 5,\n        },\n        {\n          reviewDate: new Date(2019, 6, 3).valueOf(),\n          difficulty: 1,\n        },\n      ],\n      difficulty: 1,\n      color: randomColor({ luminosity: 'dark' }),\n    },\n    {\n      id: 'c9dC1SXtD',\n      name: 'Redux',\n      description: 'redux with react',\n      lastReviewed: [\n        {\n          reviewDate: new Date(2019, 6, 3).valueOf(),\n          difficulty: 1,\n        },\n      ],\n      difficulty: 4,\n      color: randomColor({ luminosity: 'bright' }),\n    },\n    {\n      id: 'cYr6DEOpz',\n      name: 'Deep learning',\n      description:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n      lastReviewed: [\n        {\n          reviewDate: 1561801119171,\n          difficulty: 1,\n        },\n        {\n          reviewDate: Date.now().valueOf(),\n          difficulty: 2,\n        },\n      ],\n      difficulty: 5,\n      color: randomColor({ luminosity: 'bright' }),\n    },\n    {\n      id: 'Gh0wgcwSV',\n      name: 'a',\n      description: 'a',\n      lastReviewed: [\n        {\n          reviewDate: 1562361933790,\n          difficulty: 3,\n        },\n      ],\n      difficulty: 3,\n      color: '#c55be5',\n    },\n  ],\n});\n\nexport default lastReviewed;\n","import moment from 'moment';\n\nexport const findRecentReviewInDays = reviewDate => moment(reviewDate).diff(moment(), 'day');\n\nexport const findRecentReview = (reviews, asMoment = false) => {\n  const recentReview = reviews.sortBy(topic => topic.get('reviewDate')).last();\n  const reviewDate = recentReview.get('reviewDate');\n\n  if (asMoment) {\n    return moment(reviewDate);\n  }\n\n  return reviewDate;\n};\n","import low from 'lowdb';\nimport LocalStorage from 'lowdb/adapters/LocalStorage';\nimport shortid from 'shortid';\nimport * as randomColor from 'randomcolor';\n\nimport moment from 'moment';\nimport lastReviewed from './testcase';\nimport { findRecentReview } from '../utils/date';\n\nconst adapter = new LocalStorage('db');\n\nconst defaultData = [];\n\nclass Database {\n  constructor() {\n    this.db = low(adapter);\n\n    this.db.defaults({ topics: defaultData }).write();\n  }\n\n  setState(newState) {\n    this.db.setState(newState.toJS()).write();\n  }\n\n  pushTopic(name, description, difficulty) {\n    return new Promise((resolve, reject) => {\n      const id = shortid.generate();\n      const color = randomColor({ luminosity: 'bright' });\n\n      this.db\n        .get('topics')\n        .push({\n          id,\n          name,\n          description,\n          lastReviewed,\n          difficulty,\n          color,\n        })\n        .write();\n\n      const found = this.getTopic(id);\n\n      if (found) {\n        resolve(found);\n      }\n\n      const error = new Error(\"Couldn't store data\");\n      reject(error);\n    });\n  }\n\n  updateTopic(id, difficulty) {\n    return new Promise((resolve, reject) => {\n      const topic = this.db\n        .get('topics')\n        .find({ id: 'oaJwnzK1s' })\n        .value();\n\n      if (!topic) reject(new Error('Topic not found'));\n\n      const { lastReviewed: reviews } = topic;\n      if (!reviews) reject(new Error('Topic is missing data'));\n\n      const isSameDay = moment().isSame(findRecentReview(reviews), 'day');\n\n      if (isSameDay) reject(new Error('You reviewed this already for today!'));\n\n      this.db\n        .get('topics')\n        .find({ id })\n        .assign({\n          lastReviewed: [\n            ...reviews,\n            {\n              reviewDate: Date.now(),\n              difficulty,\n            },\n          ],\n        })\n        .write();\n\n      resolve();\n    });\n  }\n\n  getTopic(id) {\n    return new Promise((resolve, reject) => {\n      const value = this.db\n        .get('topics')\n        .find({ id })\n        .value();\n\n      if (value) {\n        resolve(value);\n      }\n\n      const error = new Error(`${id} not found`);\n      reject(error);\n    });\n  }\n\n  getTopics() {\n    return this.db.get('topics').value();\n  }\n}\n\nexport default Database;\n","import { createContext } from 'react';\n\nconst DbContext = createContext(null);\n\nexport default DbContext;\n","import React from 'react';\n\nimport DbContext from './context';\n\nconst withDb = Component => props => (\n  <DbContext.Consumer>{db => <Component {...props} db={db} />}</DbContext.Consumer>\n);\n\nexport default withDb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DbContext from './context';\nimport Database from './database';\n\nconst DbProvider = ({ children }) => (\n  <DbContext.Provider value={new Database()}>{children}</DbContext.Provider>\n);\n\nDbProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default DbProvider;\n","import PropTypes from 'prop-types';\n\nexport const topic = PropTypes.shape({\n  id: PropTypes.string,\n  name: PropTypes.string,\n  description: PropTypes.string,\n  lastReviewed: PropTypes.arrayOf(\n    PropTypes.shape({\n      reviewDate: PropTypes.number,\n      difficulty: PropTypes.number,\n    }),\n  ),\n  difficulty: PropTypes.number,\n  color: PropTypes.string.isRequired,\n});\n\nexport const topics = PropTypes.arrayOf(topic);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nconst Appbar = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"inherit\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Remember?\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Appbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles({\n  avatar: {\n    background: props => props.color,\n  },\n});\n\nconst ColorAvatar = ({ color }) => {\n  const classes = useStyles({ color });\n  return <Avatar className={classes.avatar} />;\n};\n\nColorAvatar.propTypes = {\n  color: PropTypes.string.isRequired,\n};\n\nexport default ColorAvatar;\n","import { createAction } from 'redux-actions';\nimport { ADD_TOPIC, UPDATE_TOPIC, DELETE_TOPIC } from '../constants';\n\nexport const deleteTopic = createAction(DELETE_TOPIC);\nexport const addTopic = createAction(ADD_TOPIC);\nexport const updateTopic = createAction(UPDATE_TOPIC);\n","export const ADD_TOPIC = 'ADD_TOPIC';\nexport const UPDATE_TOPIC = 'UPDATE_TOPIC';\nexport const DELETE_TOPIC = 'DELETE_TOPIC';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport { deleteTopic } from '../../actions';\n\nconst Warning = ({\n  id, open, handleClose, name, retention, history,\n}) => {\n  const dispatch = useDispatch();\n\n  const deleteClicked = () => {\n    dispatch(deleteTopic({ id }));\n    history.replace('/');\n    handleClose();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Delete a topic</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {'Do you really want to delete the topic '}\n          <strong>{name}</strong>\n          {'.'}\n          {retention !== 0 ? `You still remember it ${retention}%` : 'You can still relearn this'}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={deleteClicked} color=\"secondary\">\n          Delete\n        </Button>\n        <Button onClick={handleClose} color=\"primary\" autoFocus>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nWarning.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  retention: PropTypes.number.isRequired,\n  history: ReactRouterPropTypes.history.isRequired,\n};\n\nexport default withRouter(Warning);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { Map } from 'immutable';\nimport { findRecentReview } from '../../utils/date';\nimport ColorAvatar from '../ColorAvatar';\nimport Warning from './Warning';\n\nconst TopicListItem = ({ topic }) => {\n  const [open, setOpen] = React.useState(false);\n\n  const id = topic.get('id');\n  const color = topic.get('color');\n  const name = topic.get('name');\n  const retention = topic.get('retention');\n  const lastReviewed = topic.get('lastReviewed');\n\n  const lastReviewFromNow = lastReviewed\n    ? findRecentReview(lastReviewed, { asMoment: true }).fromNow()\n    : '';\n\n  const Link = React.forwardRef((itemProps, ref) => (\n    <RouterLink to={`/review/${id}`} {...itemProps} ref={ref} />\n  ));\n\n  const handleWarning = state => () => {\n    setOpen(state);\n  };\n\n  const PrimaryText = (\n    <React.Fragment>\n      <Typography variant=\"overline\" color=\"textSecondary\">\n        {`Retention ${retention.toFixed(2)}%`}\n      </Typography>\n      <Typography variant=\"body1\" color=\"textPrimary\">\n        {name}\n      </Typography>\n    </React.Fragment>\n  );\n\n  return (\n    <React.Fragment>\n      <ListItem button component={Link} alignItems=\"center\">\n        <ListItemAvatar>\n          <ColorAvatar color={color} />\n        </ListItemAvatar>\n        <ListItemText primary={PrimaryText} secondary={`Reviewed ${lastReviewFromNow}`} />\n        <ListItemSecondaryAction>\n          <IconButton edge=\"start\" aria-label=\"Delete\" onClick={handleWarning(true)}>\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n      <Divider variant=\"fullWidth\" />\n      <Warning\n        open={open}\n        handleClose={handleWarning(false)}\n        retention={retention}\n        id={id}\n        name={name}\n      />\n    </React.Fragment>\n  );\n};\n\nTopicListItem.propTypes = {\n  topic: PropTypes.instanceOf(Map).isRequired,\n};\n\nexport default TopicListItem;\n","import React from 'react';\n\nimport List from '@material-ui/core/List';\nimport { PropTypes } from 'prop-types';\nimport { List as ImmutableList } from 'immutable';\nimport TopicListItem from '../TopicListItem';\n\nconst TopicList = ({ topics }) => (\n  <List>\n    {topics.map(topic => (\n      <TopicListItem key={topic.get('id')} topic={topic} />\n    ))}\n  </List>\n);\n\nTopicList.propTypes = {\n  topics: PropTypes.instanceOf(ImmutableList).isRequired,\n};\n\nexport default TopicList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(4),\n    right: theme.spacing(4),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst AddButton = () => {\n  const classes = useStyles();\n\n  const RouterLink = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\n  return (\n    <Fab\n      aria-label=\"Add\"\n      className={classes.fab}\n      variant=\"extended\"\n      color=\"secondary\"\n      component={RouterLink}\n      to=\"/add\"\n    >\n      <AddIcon className={classes.extendedIcon} />\n      Add\n    </Fab>\n  );\n};\n\nexport default AddButton;\n","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { PropTypes } from 'prop-types';\nimport { List } from 'immutable';\nimport TopicList from '../TopicList';\nimport AddButton from '../AddButton';\n\nconst drawerWidth = 360;\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  toolbarTitle: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nconst TopicDrawer = ({ topics }) => {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      anchor=\"right\"\n    >\n      <div className={classes.toolbar}>\n        <Typography className={classes.toolbarTitle} variant=\"h6\" noWrap color=\"textSecondary\">\n          To review\n        </Typography>\n      </div>\n      {topics.isEmpty() ? (\n        <Typography className={classes.toolbarTitle} variant=\"body2\" noWrap color=\"textSecondary\">\n          Add topics to see retention\n        </Typography>\n      ) : (\n        <TopicList topics={topics} />\n      )}\n      <AddButton />\n    </Drawer>\n  );\n};\n\nTopicDrawer.propTypes = {\n  topics: PropTypes.instanceOf(List).isRequired,\n};\n\nexport default TopicDrawer;\n","import Grid from '@material-ui/core/Grid';\nimport styled from 'styled-components';\n\nconst StorybookDiv = styled(Grid)`\n  padding: 3rem;\n`;\n\nexport const FullPageGrid = styled(Grid)`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n`;\n\nexport default StorybookDiv;\n","import { findRecentReview, findRecentReviewInDays } from './date';\n\nexport const calculateRetention = (lastReview, difficulty) => {\n  const calculatedDifficulty = Math.abs(difficulty - 6);\n\n  let retention = Math.exp(lastReview / calculatedDifficulty) * 100;\n  retention = retention.toFixed(2);\n  return parseFloat(retention);\n};\n\nexport const updateRetentionForATopic = (topic) => {\n  const lastReviewed = topic.get('lastReviewed');\n  const difficulty = topic.get('difficulty');\n\n  const reviewDate = findRecentReview(lastReviewed);\n  const recentReviewInDays = findRecentReviewInDays(reviewDate);\n  const retention = calculateRetention(recentReviewInDays, difficulty);\n\n  const newTopic = topic.set('retention', retention);\n\n  return newTopic;\n};\n\nexport const updateRetentionForTopics = topics => topics.map(updateRetentionForATopic);\n","import React from 'react';\nimport {\n  LineChart,\n  XAxis,\n  YAxis,\n  Legend,\n  CartesianGrid,\n  Line,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\nimport { makeStyles } from '@material-ui/core/styles';\nimport randomColor from 'randomcolor';\nimport { calculateRetention } from '../../utils/retention';\n\nconst colors = randomColor({ count: 5, luminosity: 'dark' });\n\nconst useStyles = makeStyles(() => ({\n  fontColor: {\n    color: 'red !important',\n  },\n}));\n\nconst DefaultGraph = () => {\n  const classes = useStyles();\n  const days = [...Array(100).keys()];\n\n  const data = days\n    .map(day => ({\n      day,\n      'Very easy': calculateRetention(-day, 1),\n      Easy: calculateRetention(-day, 2),\n      Medium: calculateRetention(-day, 3),\n      Hard: calculateRetention(-day, 4),\n      'Very hard': calculateRetention(-day, 5),\n    }))\n    .filter(v => v['Very easy'] > 10);\n\n  return (\n    <ResponsiveContainer width=\"40%\" height={450}>\n      <LineChart data={data}>\n        <CartesianGrid stroke=\"#f5f5f5\" />\n        <XAxis dataKey=\"day\" />\n        <YAxis />\n        <Tooltip labelFormatter={value => (value === 'Today' ? 'Today' : `Day ${value}`)} />\n        <Legend className={classes.fontColor} />\n        <Line type=\"monotone\" dataKey=\"Very easy\" stroke={colors[0]} />\n        <Line type=\"monotone\" dataKey=\"Easy\" stroke={colors[1]} />\n        <Line type=\"monotone\" dataKey=\"Medium\" stroke={colors[2]} />\n        <Line type=\"monotone\" dataKey=\"Hard\" stroke={colors[3]} />\n        <Line type=\"monotone\" dataKey=\"Very hard\" stroke={colors[4]} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default DefaultGraph;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport {\n  LineChart,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Line,\n  Label,\n  ResponsiveContainer,\n  ReferenceLine,\n} from 'recharts';\nimport { List } from 'immutable';\n\nconst MultiTopicGraph = ({ topics, graphData }) => {\n  const data = graphData.toJS();\n\n  return (\n    <ResponsiveContainer width=\"60%\" height={500}>\n      <LineChart\n        data={data}\n        margin={{\n          top: 5,\n          right: 5,\n          bottom: 25,\n          left: 25,\n        }}\n      >\n        <CartesianGrid stroke=\"#f5f5f5\" />\n        <XAxis dataKey=\"day\" allowDuplicatedCategory={false}>\n          <Label value=\"Day\" position=\"bottom\" offset={2} />\n        </XAxis>\n        <YAxis domain={[0, 100]}>\n          <Label value=\"Retention\" angle={-90} position=\"insideLeft\" />\n        </YAxis>\n        <Tooltip\n          labelFormatter={value => (value === 'Today' ? 'Today' : `Day ${value}`)}\n          formatter={(value, name) => (name.includes('Projected') ? [value, 'Projected Retention'] : [value, 'Retention'])\n          }\n        />\n        <ReferenceLine x=\"Today\" stroke=\"gray\">\n          <Label value=\"Today\" angle={-90} position=\"insideRight\" offset={12} />\n        </ReferenceLine>\n        {topics.map(topic => (\n          <Line\n            unit=\"%\"\n            key={topic.get('name')}\n            type=\"monotone\"\n            stroke={topic.get('color')}\n            dataKey={`Retention of ${topic.get('id')}`}\n          />\n        ))}\n        {topics.map(topic => (\n          <Line\n            unit=\"%\"\n            key={topic.get('id')}\n            type=\"monotone\"\n            strokeDasharray=\"3 3\"\n            stroke={topic.get('color')}\n            dataKey={`Projected Retention of ${topic.get('id')}`}\n          />\n        ))}\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nMultiTopicGraph.propTypes = {\n  topics: PropTypes.instanceOf(List).isRequired,\n  graphData: PropTypes.instanceOf(List).isRequired,\n};\n\nexport default MultiTopicGraph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  LineChart,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Line,\n  Label,\n  ReferenceLine,\n  ResponsiveContainer,\n} from 'recharts';\n\nimport { List, Map } from 'immutable';\n\nconst TopicGraph = ({ topic, graphData }) => {\n  const data = graphData.toJS();\n\n  return (\n    <ResponsiveContainer width=\"60%\" height={500}>\n      <LineChart\n        data={data}\n        margin={{\n          top: 5,\n          right: 5,\n          bottom: 25,\n          left: 25,\n        }}\n      >\n        <CartesianGrid stroke=\"#f5f5f5\" />\n        <XAxis dataKey=\"day\" allowDuplicatedCategory={false}>\n          <Label value=\"Day\" position=\"bottom\" offset={2} />\n        </XAxis>\n        <YAxis domain={[0, 100]}>\n          <Label value=\"Retention\" angle={-90} position=\"insideLeft\" />\n        </YAxis>\n        <Tooltip\n          labelFormatter={value => (value === 'Today' ? 'Today' : `Day ${value}`)}\n          formatter={(value, name) => (name.includes('Projected') ? [value, 'Projected Retention'] : [value, 'Retention'])\n          }\n        />\n        <ReferenceLine x=\"Today\">\n          <Label value=\"Today\" angle={-90} position=\"insideRight\" offset={12} />\n        </ReferenceLine>\n        <Line\n          unit=\"%\"\n          key={topic.get('name')}\n          type=\"monotone\"\n          stroke={topic.get('color')}\n          dataKey={`Retention of ${topic.get('id')}`}\n        />\n        <Line\n          unit=\"%\"\n          key={topic.get('id')}\n          type=\"monotone\"\n          strokeDasharray=\"3 3\"\n          stroke={topic.get('color')}\n          dataKey={`Projected Retention of ${topic.get('id')}`}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nTopicGraph.propTypes = {\n  topic: PropTypes.instanceOf(Map).isRequired,\n  graphData: PropTypes.instanceOf(List).isRequired,\n};\n\nexport default TopicGraph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport { List } from 'immutable';\nimport { findRecentReview } from '../../utils/date';\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst LastReviewedGrid = ({ lastReviewed }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid className={classes.grid} container direction=\"column\" spacing={1}>\n      <Grid item>\n        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n          Last reviewed\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Typography variant=\"h5\">\n          {lastReviewed\n            ? findRecentReview(lastReviewed, { asMoment: true }).format('MMM Do YYYY')\n            : ''}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nLastReviewedGrid.propTypes = {\n  lastReviewed: PropTypes.instanceOf(List).isRequired,\n};\n\nexport default LastReviewedGrid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst RetentionGrid = ({ retention }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid className={classes.grid} container direction=\"column\" spacing={1}>\n      <Grid item>\n        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n          Retention\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Typography variant=\"h4\">{`${retention}%`}</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nRetentionGrid.propTypes = {\n  retention: PropTypes.number.isRequired,\n};\n\nexport default RetentionGrid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst CloseButton = ({ to }) => {\n  const classes = useStyles();\n\n  const AdapterLink = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\n  return (\n    <IconButton\n      aria-label=\"Delete\"\n      className={classes.margin}\n      component={AdapterLink}\n      to={to}\n      size=\"small\"\n    >\n      <CloseOutlinedIcon fontSize=\"inherit\" />\n    </IconButton>\n  );\n};\n\nCloseButton.propTypes = {\n  to: PropTypes.string.isRequired,\n};\n\nexport default CloseButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport CloseButton from '../CloseButton';\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: theme.mixins.toolbar,\n  name: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(2),\n  },\n  description: {\n    padding: theme.spacing(2),\n    paddingRight: theme.spacing(3),\n  },\n}));\n\nconst DrawerToolbar = ({ name, description }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.toolbar}>\n      <Grid container justify=\"space-between\" alignItems=\"baseline\">\n        <Typography className={classes.name} variant=\"h5\">\n          {name}\n        </Typography>\n        <CloseButton to=\"/\" />\n      </Grid>\n      <Typography\n        className={classes.description}\n        variant=\"body2\"\n        align=\"justify\"\n        color=\"textSecondary\"\n      >\n        {description}\n      </Typography>\n    </div>\n  );\n};\n\nDrawerToolbar.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nexport default DrawerToolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginLeft: -theme.spacing(1.5),\n  },\n  error: {\n    marginLeft: -theme.spacing(7),\n  },\n}));\n\nconst DifficultyButtons = ({\n  name,\n  size,\n  value,\n  setFieldValue,\n  error,\n  helperText,\n  handleBlur,\n  label,\n}) => {\n  const classes = useStyles();\n\n  const handleChange = (event, newValue) => {\n    if (newValue) {\n      setFieldValue(name, newValue, true);\n    }\n  };\n\n  const buttons = [1, 2, 3, 4, 5].map(i => (\n    <ToggleButton key={i} value={i}>\n      {i}\n    </ToggleButton>\n  ));\n\n  return (\n    <Grid\n      container\n      spacing={1}\n      direction=\"column\"\n      alignItems=\"center\"\n      className={classes.container}\n    >\n      <Grid item xs={12} container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n        <Typography align=\"left\" variant=\"caption\" color=\"textSecondary\">\n          {label}\n        </Typography>\n      </Grid>\n      <Grid item container>\n        <Grid item>\n          <ToggleButtonGroup\n            name={name}\n            size={size}\n            value={value}\n            exclusive\n            onChange={handleChange}\n            onBlur={() => {\n              handleBlur(name);\n            }}\n          >\n            {buttons}\n          </ToggleButtonGroup>\n          <Grid item container justify=\"space-between\">\n            <Typography variant=\"overline\" color=\"textPrimary\">\n              Very easy\n            </Typography>\n            <Typography variant=\"overline\" color=\"textPrimary\">\n              Very hard\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        {error && (\n          <Typography className={classes.error} align=\"left\" variant=\"caption\" color=\"error\">\n            {helperText}\n          </Typography>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nDifficultyButtons.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  size: PropTypes.oneOf(['small', 'medium', 'large']).isRequired,\n  value: PropTypes.number.isRequired,\n  error: PropTypes.bool.isRequired,\n  helperText: PropTypes.string.isRequired,\n  setFieldValue: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n};\n\nexport default DifficultyButtons;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport { withRouter } from 'react-router';\n\nimport { Formik } from 'formik';\nimport { compose } from 'recompose';\n\nimport { object, number } from 'yup';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useDispatch } from 'react-redux';\nimport DifficultyButtons from '../DifficultyButtons/index';\nimport { Database, withDb } from '../../db';\nimport { updateTopic } from '../../actions';\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    margin: theme.spacing(2),\n  },\n  submitButton: {\n    marginTop: theme.spacing(3),\n  },\n  difficultyButtons: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst schema = object({\n  difficulty: number()\n    .min(1)\n    .max(5)\n    .required('Difficulty is required'),\n});\n\nconst ReviewForm = ({\n  db, history, id, initialValues,\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      enableReinitialize\n      validationSchema={schema}\n      initialValues={initialValues}\n      onSubmit={async (values) => {\n        const { difficulty } = values;\n\n        try {\n          dispatch(updateTopic({ id, difficulty }));\n        } catch (error) {\n          history.replace({ pathname: '/error', state: { message: error.message } });\n        }\n      }}\n    >\n      {({\n        handleSubmit, handleBlur, values, errors, touched, setFieldValue,\n      }) => (\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <Grid container>\n            <Grid item xs={8} className={classes.difficultyButtons}>\n              <DifficultyButtons\n                name=\"difficulty\"\n                size=\"small\"\n                label=\"Review Difficulty\"\n                value={values.difficulty}\n                setFieldValue={setFieldValue}\n                handleBlur={handleBlur}\n                error={!!errors.difficulty && !!touched.difficulty}\n                helperText={errors.difficulty || ''}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            className={classes.submitButton}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Reviewed\n          </Button>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nReviewForm.propTypes = {\n  db: PropTypes.instanceOf(Database).isRequired,\n  history: ReactRouterPropTypes.history.isRequired,\n  id: PropTypes.string.isRequired,\n  initialValues: PropTypes.shape({\n    difficulty: PropTypes.number,\n  }).isRequired,\n};\n\nexport default compose(\n  withDb,\n  withRouter,\n)(ReviewForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Divider from '@material-ui/core/Divider';\n\nimport { Map } from 'immutable';\nimport LastReviewedGrid from './LastReviewedGrid';\nimport RetentionGrid from './RetentionGrid';\nimport DrawerToolbar from './DrawerToolbar';\nimport ReviewForm from './ReviewForm';\n\nconst drawerWidth = 360;\nconst reviewDrawerWidth = 240;\n\nconst useStyles = makeStyles(() => ({\n  drawer: {\n    width: reviewDrawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: reviewDrawerWidth,\n    marginRight: drawerWidth,\n    overflowX: 'hidden',\n  },\n}));\n\nconst ReviewDrawer = ({ topic }) => {\n  const classes = useStyles();\n\n  const id = topic.get('id');\n  const name = topic.get('name');\n  const description = topic.get('description');\n  const lastReviewed = topic.get('lastReviewed');\n  const retention = topic.get('retention');\n  const difficulty = topic.get('difficulty');\n\n  const initialValues = {\n    difficulty,\n  };\n\n  if (!topic) return null;\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      anchor=\"right\"\n    >\n      <DrawerToolbar name={name} description={description} />\n      <Divider variant=\"middle\" />\n      <RetentionGrid retention={retention} />\n      <Divider variant=\"middle\" />\n      <LastReviewedGrid lastReviewed={lastReviewed} />\n      <Divider variant=\"middle\" />\n      <ReviewForm id={id} initialValues={initialValues} />\n    </Drawer>\n  );\n};\n\nReviewDrawer.propTypes = {\n  topic: PropTypes.instanceOf(Map).isRequired,\n};\n\nexport default ReviewDrawer;\n","import moment from 'moment';\n\nimport { List, Map, Range } from 'immutable';\nimport { calculateRetention } from './retention';\n\nconst getGraphDataForATopic = (topic) => {\n  let lastReviewed = topic.get('lastReviewed');\n  const id = topic.get('id');\n  lastReviewed = lastReviewed.sortBy(review => review.reviewDate);\n\n  if (!lastReviewed) {\n    return [];\n  }\n\n  const firstReview = lastReviewed.first();\n  const firstDay = firstReview.get('reviewDate');\n  const firstDifficulty = firstReview.get('difficulty');\n\n  //   assign difficulty to days\n  const reviews = lastReviewed.reduce((previousReviews, review) => {\n    const reviewDate = review.get('reviewDate');\n    const difficulty = review.get('difficulty');\n\n    const differenceFromFirstReviewDay = moment(reviewDate).diff(moment(firstDay), 'days');\n    const nextReviews = previousReviews.set(differenceFromFirstReviewDay, difficulty);\n    return nextReviews;\n  }, Map());\n\n  const today = moment().diff(moment(firstDay), 'days');\n\n  const sinceFirstReview = Range(0, today + 1);\n  const fromLastReview = Range(today + 1, today + 11);\n\n  let since = 0;\n  let difficulty = firstDifficulty;\n\n  let currentGraphData = sinceFirstReview\n    .map((day) => {\n      since += 1;\n\n      // reset review to 100% on the day of review\n      if (reviews.has(day)) {\n        since = 0;\n        difficulty = reviews.get(day);\n      }\n\n      const retention = calculateRetention(-since, difficulty);\n\n      return Map({\n        day: moment(firstDay)\n          .add(day, 'day')\n          .format('MMM DD, YY'),\n        [`Retention of ${id}`]: retention,\n      });\n    })\n    .toList();\n\n  const dataOfToday = currentGraphData.last();\n  currentGraphData = currentGraphData.pop();\n\n  const projectedGraphData = fromLastReview\n    .map((day, index) => {\n      const projectedDay = since + 1 + index;\n\n      return Map({\n        day: moment(firstDay)\n          .add(day, 'day')\n          .format('MMM DD, YY'),\n        [`Projected Retention of ${id}`]: calculateRetention(-projectedDay, difficulty),\n      });\n    })\n    .toList();\n\n  const currentGraphDataWithToday = currentGraphData.push(\n    Map({\n      day: 'Today',\n      [`Retention of ${id}`]: dataOfToday.get(`Retention of ${id}`),\n      [`Projected Retention of ${id}`]: dataOfToday.get(`Retention of ${id}`),\n    }),\n  );\n\n  const graphData = currentGraphDataWithToday.concat(projectedGraphData);\n\n  return graphData;\n};\n\nconst getGraphDataForAllTopics = topics => topics.reduce((acc, topic) => {\n  const graphData = getGraphDataForATopic(topic);\n  return acc.merge(graphData);\n}, List());\n\nexport { getGraphDataForATopic, getGraphDataForAllTopics };\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withRouter } from 'react-router';\nimport ReactRouterPropTypes from 'react-router-prop-types';\n\nimport { List } from 'immutable';\nimport { TopicGraph } from '../../components/Graph';\nimport ReviewDrawer from '../../components/ReviewDrawer';\nimport { getGraphDataForATopic } from '../../utils/graph';\n\nconst SingleTopic = ({ match, history, topics }) => {\n  const { id } = match.params;\n  const topic = topics.filter(obj => obj.get('id') === id).first();\n\n  if (!topic) {\n    history.replace('/error');\n    return null;\n  }\n\n  const graphData = getGraphDataForATopic(topic);\n\n  return (\n    <Fragment>\n      <TopicGraph topic={topic} graphData={graphData} />\n      <ReviewDrawer topic={topic} />\n    </Fragment>\n  );\n};\n\nSingleTopic.propTypes = {\n  match: ReactRouterPropTypes.match.isRequired,\n  history: ReactRouterPropTypes.history.isRequired,\n  topics: PropTypes.instanceOf(List).isRequired,\n};\n\nexport default withRouter(SingleTopic);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: theme.mixins.toolbar,\n  name: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nconst DrawerToolbar = ({ name }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.toolbar}>\n      <Typography className={classes.name} variant=\"h5\">\n        {name}\n      </Typography>\n    </div>\n  );\n};\n\nDrawerToolbar.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default DrawerToolbar;\n","import React from 'react';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Divider from '@material-ui/core/Divider';\nimport DrawerToolbar from './DrawerToolbar';\n\nconst drawerWidth = 360;\nconst reviewDrawerWidth = 240;\n\nconst useStyles = makeStyles(() => ({\n  drawer: {\n    width: reviewDrawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: reviewDrawerWidth,\n    marginRight: drawerWidth,\n  },\n}));\n\nconst OverviewDrawer = () => {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      anchor=\"right\"\n    >\n      <DrawerToolbar name=\"Overview\" description=\"\" />\n      <Divider variant=\"middle\" />\n    </Drawer>\n  );\n};\n\nexport default OverviewDrawer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { List } from 'immutable';\nimport { MultiTopicGraph, DefaultGraph } from '../../components/Graph';\nimport OverviewDrawer from '../../components/OverviewDrawer';\n\nconst AllTopics = ({ topics, graphData }) => (\n  <Fragment>\n    {topics.isEmpty() ? (\n      <DefaultGraph />\n    ) : (\n      <MultiTopicGraph topics={topics} graphData={graphData} />\n    )}\n    <OverviewDrawer />\n  </Fragment>\n);\n\nAllTopics.propTypes = {\n  topics: PropTypes.instanceOf(List).isRequired,\n  graphData: PropTypes.instanceOf(List).isRequired,\n};\n\nexport default AllTopics;\n","import PropTypes from 'prop-types';\n\nconst valueProps = PropTypes.shape({\n  name: PropTypes.string,\n  description: PropTypes.string,\n  difficulty: PropTypes.number,\n});\n\nconst errorOrTouchedProps = PropTypes.shape({\n  name: PropTypes.bool,\n  description: PropTypes.bool,\n  difficulty: PropTypes.bool,\n});\n\nexport { errorOrTouchedProps };\n\nexport default valueProps;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport formProps, { errorOrTouchedProps } from './formProps';\nimport DifficultyButtons from '../DifficultyButtons/index';\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    margin: theme.spacing(2),\n  },\n  submitButton: {\n    marginTop: theme.spacing(3),\n  },\n  difficultyButtons: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst Form = ({\n  handleSubmit,\n  handleChange,\n  handleBlur,\n  values,\n  errors,\n  touched,\n  setFieldValue,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <form className={classes.form} noValidate onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={8}>\n          <TextField\n            name=\"name\"\n            label=\"Name\"\n            value={values.name}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={!!errors.name && !!touched.name}\n            margin=\"normal\"\n            variant=\"outlined\"\n            helperText={errors.name || ''}\n          />\n        </Grid>\n        <Grid item xs={8}>\n          <TextField\n            name=\"description\"\n            label=\"Description\"\n            multiline\n            rows=\"3\"\n            value={values.description}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={!!errors.description && !!touched.description}\n            margin=\"normal\"\n            variant=\"outlined\"\n            helperText={errors.description || ''}\n          />\n        </Grid>\n        <Grid item xs={8} className={classes.difficultyButtons}>\n          <DifficultyButtons\n            name=\"difficulty\"\n            size=\"medium\"\n            label=\"Difficulty\"\n            value={values.difficulty}\n            setFieldValue={setFieldValue}\n            handleBlur={handleBlur}\n            error={!!errors.difficulty && !!touched.difficulty}\n            helperText={errors.difficulty || ''}\n          />\n        </Grid>\n      </Grid>\n      <Button className={classes.submitButton} variant=\"contained\" color=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  setFieldValue: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  values: formProps.isRequired,\n  errors: formProps.isRequired,\n  touched: errorOrTouchedProps.isRequired,\n};\n\nexport default Form;\n","import * as React from 'react';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport { withRouter } from 'react-router';\n\nimport { Formik } from 'formik';\nimport { compose } from 'recompose';\n\nimport { string, object, number } from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport shortid from 'shortid';\nimport formProps from './formProps';\nimport Form from './Form';\nimport { addTopic } from '../../actions';\n\nconst schema = object({\n  name: string().required('Name is required'),\n  description: string().required('Description is required'),\n  difficulty: number()\n    .min(1)\n    .max(5)\n    .required('Difficulty is required'),\n});\n\nconst FormikForm = ({ history, initialValues }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      validationSchema={schema}\n      initialValues={initialValues}\n      onSubmit={async (values) => {\n        try {\n          const id = shortid.generate();\n          const payload = { ...values, id };\n          dispatch(addTopic(payload));\n          history.push(`/review/${id}`);\n        } catch (error) {\n          history.replace({ pathname: '/error', state: { message: error.message } });\n        }\n      }}\n    >\n      {props => <Form {...props} />}\n    </Formik>\n  );\n};\n\nFormikForm.defaultProps = {\n  initialValues: {\n    name: '',\n    description: '',\n    difficulty: 3,\n  },\n};\n\nFormikForm.propTypes = {\n  history: ReactRouterPropTypes.history.isRequired,\n  initialValues: formProps,\n};\n\nexport default compose(withRouter)(FormikForm);\n","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport FormikForm from './FormikForm';\nimport CloseButton from '../CloseButton/index';\n\nconst drawerWidth = 360;\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  toolbarTitle: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nconst AddTopic = () => {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      anchor=\"right\"\n    >\n      <div className={classes.toolbar}>\n        <Grid container justify=\"space-between\" alignItems=\"baseline\">\n          <Typography className={classes.toolbarTitle} variant=\"h6\" noWrap color=\"textSecondary\">\n            What did you learn?\n          </Typography>\n          <CloseButton to=\"/\" />\n        </Grid>\n      </div>\n      <FormikForm />\n    </Drawer>\n  );\n};\n\nexport default AddTopic;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport Appbar from '../../components/Appbar';\nimport TopicDrawer from '../../components/TopicDrawer';\nimport { FullPageGrid } from '../../components';\nimport SingleTopic from '../SingleTopic';\n\nimport { updateRetentionForTopics } from '../../utils/retention';\nimport { getGraphDataForAllTopics } from '../../utils/graph';\nimport AllTopics from '../AllTopics';\nimport AddTopic from '../../components/AddTopic';\n\nconst HomePage = () => {\n  const fetchedTopics = useSelector(state => state.get('topics'), shallowEqual);\n  if (!fetchedTopics) return null;\n\n  const topics = updateRetentionForTopics(fetchedTopics);\n  const graphData = getGraphDataForAllTopics(topics);\n\n  return (\n    <React.Fragment>\n      <Appbar />\n      <FullPageGrid>\n        <Switch>\n          <Route path=\"/review/:id\" render={props => <SingleTopic {...props} topics={topics} />} />\n          <Route\n            path=\"/\"\n            render={props => <AllTopics {...props} topics={topics} graphData={graphData} />}\n          />\n        </Switch>\n        <Switch>\n          <Route path=\"/add\" component={AddTopic} />\n          <Route path=\"/\" render={props => <TopicDrawer {...props} topics={topics} />} />\n        </Switch>\n      </FullPageGrid>\n    </React.Fragment>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport ReactRouterPropTypes from 'react-router-prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport { withRouter } from 'react-router';\nimport { FullPageGrid } from '../../components';\n\nconst ErrorPage = ({ location }) => (\n  <FullPageGrid container direction=\"column\" alignItems=\"center\" justify=\"center\" spacing={0}>\n    <Grid item xs={6}>\n      <div>\n        <Typography variant=\"h1\" align=\"center\">\n          404\n        </Typography>\n        <br />\n        <Typography variant=\"h5\" color=\"textSecondary\">\n          The page you requested was not found.\n        </Typography>\n        <span>{location.state && location.state.message}</span>\n      </div>\n    </Grid>\n  </FullPageGrid>\n);\n\nErrorPage.propTypes = {\n  location: ReactRouterPropTypes.location.isRequired,\n};\n\nexport default withRouter(ErrorPage);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport HomePage from './containers/HomePage';\nimport ErrorPage from './containers/ErrorPage';\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path=\"/\" component={HomePage} />\n    <Route path=\"/review/:id\" component={HomePage} />\n    <Route path=\"/add\" component={HomePage} />\n    <Route path=\"/error\" component={ErrorPage} />\n    <Route component={ErrorPage} />\n  </Switch>\n);\n\nexport default Routes;\n","import randomColor from 'randomcolor';\n\nimport { handleActions } from 'redux-actions';\n\nimport moment from 'moment';\n\nimport { fromJS, Map } from 'immutable';\n\nimport { ADD_TOPIC, UPDATE_TOPIC, DELETE_TOPIC } from '../constants';\nimport { findRecentReviewInDays } from '../utils/date';\nimport Database from '../db/database';\n\nconst db = new Database();\n\nconst fromLocalDb = db.getTopics();\n\nconst defaultState = fromLocalDb\n  ? fromJS({\n    topics: fromLocalDb,\n  })\n  : fromJS({\n    topics: [],\n  });\n\nconst addTopic = (state, action) => {\n  const { payload } = action;\n  const {\n    id, name, difficulty, description,\n  } = payload;\n\n  const color = randomColor({ luminosity: 'bright' });\n  const lastReviewed = [\n    {\n      reviewDate: Date.now().valueOf(),\n      difficulty,\n    },\n  ];\n\n  const newTopic = fromJS({\n    id,\n    name,\n    description,\n    lastReviewed,\n    difficulty,\n    color,\n  });\n\n  const newState = state.updateIn(['topics'], arr => arr.push(newTopic));\n\n  db.setState(newState);\n\n  return newState;\n};\n\nconst updateTopic = (state, action) => {\n  const { payload } = action;\n  const { id, difficulty } = payload;\n\n  const topic = state\n    .get('topics')\n    .filter(obj => obj.get('id') === id)\n    .first();\n\n  const lastReviewed = topic.get('lastReviewed');\n\n  const isSameDay = moment().isSame(findRecentReviewInDays(lastReviewed), 'day');\n\n  if (isSameDay) return state;\n\n  const updatedReviewDates = lastReviewed.push(\n    Map({\n      reviewDate: Date.now().valueOf(),\n      difficulty,\n    }),\n  );\n\n  const index = state.get('topics').findIndex(item => item.get('id') === id);\n\n  const newState = state.updateIn(['topics'], arr => arr.update(index, item => item.set('lastReviewed', updatedReviewDates)));\n\n  db.setState(newState);\n\n  return newState;\n};\n\nconst deleteTopic = (state, action) => {\n  const { payload } = action;\n  const { id } = payload;\n\n  const filteredTopics = state.get('topics').filter(topic => topic.get('id') !== id);\n\n  const newState = state.set('topics', filteredTopics);\n\n  db.setState(newState);\n\n  return newState;\n};\n\nexport default handleActions(\n  {\n    [ADD_TOPIC]: addTopic,\n    [DELETE_TOPIC]: deleteTopic,\n    [UPDATE_TOPIC]: updateTopic,\n  },\n  defaultState,\n);\n","/* eslint-disable no-underscore-dangle */\nimport { createStore } from 'redux';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer /* preloadedState, */,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n/* eslint-enable */\n\nexport default store;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './App.scss';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Provider } from 'react-redux';\nimport { DbProvider } from './db';\n\nimport Routes from './routes';\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <DbProvider>\n        <React.Fragment>\n          <CssBaseline />\n          <Router>\n            <Routes />\n          </Router>\n        </React.Fragment>\n      </DbProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}